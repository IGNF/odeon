FROM nvidia/cuda:10.2-devel-ubuntu18.04
# FROM pytorch/pytorch:1.11.0-cuda11.3-cudnn8-devel
ARG CONDA_NAME="odeon"
ARG CONDA_FILE="test"
ARG HTTP_PROXY=""
ARG HTTPS_PROXY=""
ENV http_proxy $HTTP_PROXY
ENV https_proxy $HTTPS_PROXY

# set the timezone, otherwise it asks for it... and freezes
ENV TZ=Europe/Paris
RUN ln -snf /usr/share/zoneinfo/$TZ /etc/localtime && echo $TZ > /etc/timezone

# Needed to use apt-get afterwards due to CUDA changes described here since April 27, 2022:
# https://forums.developer.nvidia.com/t/notice-cuda-linux-repository-key-rotation/212772
# Not the recommpended method, but else we need wget installed afterwards.
# We changed to 10.2-devel-ubuntu18.04 so that might not be needed.
RUN apt-get update && apt-get upgrade -y && apt-get install -y wget
RUN apt-key del 7fa2af80
RUN apt-key adv --fetch-keys https://developer.download.nvidia.com/compute/cuda/repos/ubuntu1804/x86_64/3bf863cc.pub

# all the apt-get installs
RUN apt-get update && apt-get upgrade -y && apt-get install -y \
        software-properties-common  \
        wget                        \
        git                         \
        libgl1-mesa-glx libegl1-mesa libxrandr2 libxrandr2 libxss1 libxcursor1 libxcomposite1 libasound2 libxi6 libxtst6   # package needed for anaconda

RUN wget --quiet https://repo.anaconda.com/miniconda/Miniconda3-latest-Linux-x86_64.sh -O ~/miniconda.sh \
        && /bin/bash ~/miniconda.sh -b -p /Miniconda3 \
        && rm ~/miniconda.sh
        # && echo "source activate base" > ~/.bashrc

# SHELL ["/bin/bash", "-c"]
# Only copy necessary files to set up the environment,
# to use docker caching if requirements files were not updated.
WORKDIR /packaging
COPY packaging/ .

CMD ["bash"]
ENV PATH /Miniconda3/bin/:$PATH
run ls -la
RUN conda init bash && bash ~/.bashrc && . ~/.bashrc
RUN conda install -n base -c conda-forge mamba
RUN mamba env create -f test_env.yaml

# ENV bashrc /root/.bashrc

# RUN /Miniconda3/bin/conda init --all
# ENV PATH /Miniconda3/envs/$CONDA_NAME/bin:$PATH
#
# RUN mamba update -n $CONDA_NAME  -f test_env.yaml
# Copy the repository content in /odeon
WORKDIR /odeon
COPY . .
