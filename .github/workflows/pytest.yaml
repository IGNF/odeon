name: tests-code

on:
  push:
    branches: [main, pytest, cicd, dev, merge-branch]
  pull_request:
    branches: [main]
    types: [opened, reopened, synchronize, review_requested, ready_for_review]
#  schedule:
#    - cron: "0 4 * * *"

env:
  CACHE_NUMBER: 3  # increase to reset cache manually

jobs:
  tests-cpu:
    name: "unit test the package"
    runs-on: ${{ matrix.os }}

    strategy:
      fail-fast: false
      matrix:
        os: [ ubuntu-latest, macos-latest, windows-latest ]
        python-version: ['3.10' ]
        include:
          - env: "test"
          - os: ubuntu-latest
            label: linux-64
            pip_path: ~/.cache/pip
            prefix: /usr/share/miniconda3/envs/test
          - os: macos-latest
            label: osx-64
            pip_path: ~/Library/Caches/pip
            prefix: /usr/share/miniconda3/envs/test
          - os: windows-latest
            pip_path: ~\AppData\Local\pip\Cache
            prefix: C:\Miniconda3\envs\test
    steps:
    - uses: actions/checkout@v2
    - name: check packaging file
      run: cat ${{ format('packaging/{0}_env.yml', matrix.env) }}

    - name: Setup Mambaforge
      uses: conda-incubator/setup-miniconda@v2
      with:
        miniforge-variant: Mambaforge
        miniforge-version: latest
        activate-environment: ${{ matrix.env }}
        use-mamba: true
        python-version: ${{ matrix.python-version }}

    - name: Set cache date
      run: echo "DATE=$(date +'%Y%m%d')" >> $GITHUB_ENV

    - uses: actions/cache@v2
      with:
        path: ${{ matrix.prefix }}
        key: ${{ matrix.label }}-conda-${{ hashFiles(format('packaging/{0}_env.yml', matrix.env)) }}-${{ hashFiles(format('packaging/{0}_requirements.txt', matrix.env)) }}-${{ env.CACHE_NUMBER }}-${{ env.DATE }}
        restore-keys: |
          ${{ matrix.label }}-conda
          ${{ matrix.label }}
      id: cache

    - name: Update environment
      run: mamba env update -n ${{ matrix.env }} -f ${{ format('packaging/{0}_env.yml', matrix.env) }}
      if: ${{ steps.cache.outputs.cache-hit != 'true' || runner.os == 'macOS'}}

    - name: Conda info
      shell: bash -l {0}
      run: |
        conda info -a
        conda list

    - name: Test package install
      shell: bash -l {0}
      run: pip install -e .

    - name: Run Tests
      shell: bash -l {0}
      run: pytest -v --cov=odeon --cov-report xml tests --flake8 --mypy

    - name: Upload coverage
      uses: codecov/codecov-action@v1
      with:
        file: coverage.xml
        flags: pytest, os${{ matrix.os }}, python${{ matrix.python-version }}
        name: coverage-odeon